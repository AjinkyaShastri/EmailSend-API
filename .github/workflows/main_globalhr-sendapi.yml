name: Build and Deploy .NET Framework Web API to Azure

on:
  push:
    branches:
      - main   # change if using a different branch

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # 3. Install .NET Framework 4.6.1 Developer Pack (needed for GitHub runners)
      - name: Install .NET Framework 4.6.1 Developer Pack
        run: choco install netfx-4.6.1-devpack -y

      # 4. Restore NuGet packages (using csproj since sln is missing)
      - name: Restore NuGet packages
        run: nuget restore GlobaHr-SendEmail-API/GlobaHr-SendEmail-API.csproj -SolutionDirectory .

      # 5. Build with MSBuild (creates WebApp.zip in workspace root)
      - name: Build with MSBuild
        run: msbuild GlobaHr-SendEmail-API/GlobaHr-SendEmail-API.csproj `
            /p:Configuration=Release `
            /p:DeployOnBuild=true `
            /p:WebPublishMethod=Package `
            /p:PackageAsSingleFile=true `
            /p:SkipInvalidConfigurations=true `
            /p:PackageLocation="WebApp.zip"

    - name: Publish project
      run: msbuild GlobaHr-SendEmail-API\GlobaHr-SendEmail-API.csproj /p:Configuration=Release /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="${{ github.workspace }}\WebApp.zip"


      # 7. Verify WebApp.zip exists
      - name: Verify package
        run: dir ${{ github.workspace }}\WebApp.zip

      # 7. Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 8. Deploy to Azure WebApp
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v3
        with:
          app-name: GlobalHr-SendAPI
          package: ${{ github.workspace }}/WebApp.zip
